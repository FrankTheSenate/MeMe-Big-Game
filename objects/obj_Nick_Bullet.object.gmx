<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Nick_Bullet_Idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize variables
grav = 1
hspd = 0
vspd = 0
jspd = 15
movespeed = 8
image_speed = 0.3
image_index = 1
slidegrav = 0.1
isslideright = false
isslideleft = false
timer[0] = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>jump = keyboard_check(ord("W"))
right = keyboard_check(ord("D"))
left = -keyboard_check(ord("A"))
isslideright = false
isslideleft = false

//Cool walljump stuff
if place_meeting(x+1, y, obj_grass) and !place_meeting(x, y+1 , obj_grass) and !right and jump and left
{
vspd = jump * -jspd

}

if (place_meeting(x-1, y, obj_grass) and !place_meeting(x, y+1 , obj_grass) and !left and jump and right)
{
vspd = jump * -jspd
}


//Dynamic Jump + Movement
move = left + right
hspd = move * movespeed

if (vspd &lt; 15)
{
vspd += grav
}

if (vspd &lt; 0) and !jump
{
vspd = max(vspd, -jspd/2)
}


//jamp
if (place_meeting(x, y+1, obj_grass))
{
    vspd = jump * -jspd
}



//vertical touchwall
if (place_meeting(x, y+vspd, obj_grass))
{
    while(!place_meeting(x, y+sign(vspd)*2, obj_grass))
    {
        y+= sign(vspd)
    }
    vspd = 0
}
y+= vspd

//Slide Jumpstuff

if jump and right and isslideleft = true
{
    vspd = jump * -jspd
}
if jump and left and isslideright = true 
{
    vspd = jump * -jspd
}


//horizontal touchwall + sliding
if (place_meeting(x+hspd, y, obj_grass))
{
    while(!place_meeting(x+sign(hspd), y, obj_grass))
    {
        x+= sign(hspd)
    }
    if sign(hspd) = -1
    {
    isslideleft = true
    }
    if sign(hspd) = 1
    {
    isslideright = true
    }

    hspd = 0
    
}

x+= hspd

if isslideright = true and !left
{
vspd = 0.1
}

if isslideleft = true and !right
{
vspd = 0.1
}


if !(place_meeting(x+1, y, obj_grass))
{
grav = 1
isslideright = false
}

if !(place_meeting(x-1, y, obj_grass))
{
grav = 1
isslideleft = false
}




</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animations
if (place_meeting(x, y+2, obj_grass)) and keyboard_check(ord("D"))  {
    sprite_index = spr_Nick_Bullet_Walking 
    image_xscale = -1
}

if (place_meeting(x, y+2, obj_grass)) and keyboard_check(ord("A"))  {
    sprite_index = spr_Nick_Bullet_Walking 
    image_xscale = 1
}

if !(place_meeting(x, y+2, obj_grass)) and keyboard_check(ord("D"))  {
    sprite_index = spr_Nick_Bullet_Falling 
    image_xscale = -1
}
if !(place_meeting(x, y+2, obj_grass)) and keyboard_check(ord("A"))  {
    sprite_index = spr_Nick_Bullet_Falling 
    image_xscale = 1
}

if keyboard_check(ord("W")) and !keyboard_check(ord("A")) and !keyboard_check(ord("D")) and (place_meeting(x, y+2, obj_grass))
{
sprite_index = spr_Nick_Bullet_Falling 
image_xscale = -1
}

if !keyboard_check(ord("W")) and !keyboard_check(ord("A")) and !keyboard_check(ord("D")) and (place_meeting(x, y+2, obj_grass)) and sprite_index = spr_Nick_Bullet_Walking and image_xscale = 1
{
sprite_index = spr_Nick_Bullet_Idle 
image_xscale = 1
}
if !keyboard_check(ord("W")) and !keyboard_check(ord("A")) and !keyboard_check(ord("D")) and (place_meeting(x, y+2, obj_grass)) and sprite_index = spr_Nick_Bullet_Walking and image_xscale = -1
{
sprite_index = spr_Nick_Bullet_Idle 
image_xscale = -1
}
if !keyboard_check(ord("W")) and !keyboard_check(ord("A")) and !keyboard_check(ord("D")) and (place_meeting(x, y+2, obj_grass)) and sprite_index = spr_Nick_Bullet_Falling and image_xscale = -1
{
sprite_index = spr_Nick_Bullet_Idle 
image_xscale = -1
}
if !keyboard_check(ord("W")) and !keyboard_check(ord("A")) and !keyboard_check(ord("D")) and (place_meeting(x, y+2, obj_grass)) and sprite_index = spr_Nick_Bullet_Falling and image_xscale = 1
{
sprite_index = spr_Nick_Bullet_Idle 
image_xscale = 1
}

if sprite_index = spr_Nick_Bullet_Idle and image_xscale = -1 and keyboard_check(ord("W")) and !(place_meeting(x, y+2, obj_grass))or sprite_index = spr_Nick_Bullet_Walking and image_xscale = -1 and keyboard_check(ord("W")) and (place_meeting(x, y+2, obj_grass))
{
    sprite_index = spr_Nick_Bullet_Falling
    image_xscale = -1
}
if sprite_index = spr_Nick_Bullet_Idle and image_xscale = 1 and keyboard_check(ord("W")) and !(place_meeting(x, y+2, obj_grass))or sprite_index = spr_Nick_Bullet_Walking and image_xscale = 1 and keyboard_check(ord("W")) and (place_meeting(x, y+2, obj_grass))
{
    sprite_index = spr_Nick_Bullet_Falling 
    image_xscale = 1
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>223</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_current_room</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
